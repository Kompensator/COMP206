A) Git commands:
// assuming both developers' repo have been initialized
// after dev1 makes some significant changes
$ git pull
$ git add --all
$ git commit -m "Some relevant info about changes"
$ git push

// after dev2 makes some changes worth commiting
$ git pull
$ git add --all
$ git commit -m "some other important info"
$ git push

B)
Assume dev1 made changes to sum2.c which he shouldn't touch, git will not allow him to 
pull because both dev1 and dev2 changed sum2.c.
How dev1 can solve this:
$ git stash
$ git pull
$ git stash pop
Then dev1 has to go to sum2.c and delete his own changes in a text editor. After this, he will be able to pull, commit and push normally.

if dev1 forgot to git pull and commits the changes right away, he will have a nasty merge conflict when he tries to push. In this case, both dev should backup the files that they work on and do:
$ git rest --hard <last common commit that they both have>
and replace the files from the older commit with the fresh ones.